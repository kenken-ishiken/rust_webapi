---
description:
globs:
alwaysApply: true
---
# Rust WebAPI プロジェクトガイド

このプロジェクトは、Rustで実装されたWebAPIです。以下の規約に従って開発を進めてください。

## プロジェクト構造

プロジェクトは以下のレイヤードアーキテクチャに従います：

- `domain/` - ドメインモデルとビジネスロジック
- `application/` - ユースケースとアプリケーションサービス
- `infrastructure/` - 外部サービスとの連携、データアクセス
- `presentation/` - APIエンドポイントとリクエスト/レスポンス処理
- `tests/` - テストコード

## コーディング規約

### 共通規約

- インデント: スペース4つ
- 行の最大長: 100文字
- ファイル末尾: 改行を含める
- インポート順序: std → external → crate → self → super

### コードスタイル

- `match`式を`if let`より優先
- `impl Trait`を戻り値の型として優先
- ビルダーパターンを推奨
- 構造体更新構文を活用

## エラー処理

- 適切なエラー型の使用
- エラーメッセージは具体的に
- パニックを避け、`Result`を返す

## ドキュメンテーション

- パブリックAPIには必ずドキュメンテーションコメント
- 複雑なロジックには説明コメント
- モジュールレベルのドキュメント必須